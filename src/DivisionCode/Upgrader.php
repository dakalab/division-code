<?php

namespace Dakalab\DivisionCode;

use Symfony\Component\DomCrawler\Crawler;

/**
 * Upgrader class is used to update the codes array file.
 *
 * The source data is from official website of "Ministry of Civil Affairs of PRC"
 */
class Upgrader extends DivisionCode
{
    protected function getListURL(): string
    {
        $year = date('Y');
        if (date('n') < 3) {
            $year--;
        }

        return 'http://www.mca.gov.cn/article/sj/xzqh/' . $year;
    }

    protected function getLatestCodesURL(): string
    {
        $html = file_get_contents($this->getListURL());

        $crawler = new Crawler($html);

        $crawler = $crawler->filter('a:contains("县以上行政区划代码")');

        return 'http://www.mca.gov.cn' . $crawler->getNode(0)->getAttribute('href');
    }

    public static function trimSpecialCharacters($str): string
    {
        return trim(str_replace([chr(194) . chr(160), chr(32)], '', $str));
    }

    public function getCodes(): array
    {
        $html = file_get_contents($this->getLatestCodesURL());

        // need to redirect
        if (preg_match('/http:\/\/www\.mca\.gov\.cn\/article\/sj\/xzqh\/.+\.html/U', $html, $m)) {
            $html = file_get_contents($m[0]);
        }

        $crawler = new Crawler($html);

        $crawler = $crawler->filterXPath('//tr[@height=19]');

        $codes = [];
        foreach ($crawler as $tr) {
            $td = (new Crawler($tr))->filter('td');
            $k = self::trimSpecialCharacters($td->getNode(1)->nodeValue);
            $v = self::trimSpecialCharacters($td->getNode(2)->nodeValue);
            $codes[$k] = $v;
        }

        return $codes;
    }

    public function upgrade()
    {
        $codes = $this->getCodes();
        $content = "<?php\n// Codes generated by Upgrader. DO NOT EDIT.\n";
        $content .= 'return ';
        $content .= var_export($codes, true);
        $content .= ";\n";

        file_put_contents($this->getCodesFile(), $content);

        if ($this->supportSQLite()) {
            $this->db->exec('CREATE TABLE IF NOT EXISTS division_codes (code TEXT PRIMARY KEY, name TEXT)');
            foreach ($codes as $k => $v) {
                $this->db->exec("REPLACE INTO `division_codes` (`code`, `name`) VALUES ('$k', '$v')");
            }
        }

        return true;
    }
}
